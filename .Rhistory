print(sort(dados, by=cluster_kmeans))
library(tidyverse)
library(tidyverse)
library(dplyr)
install.packages(rlang)
install.packages("rlang")
library(tidyverse)
library(ggplot2)
library(cluster)
library(factoextra)
library(dbscan)
#install.packages("arules")
library(arules)
itemtransacao = read_csv("../../../itemtransacao.csv")
itens = read_csv("../../../itens.csv")
transacoes = read_csv("../../../transacoes.csv")
print(names(itemtransacao))
print(names(itens))
print(names(transacoes))
for(col in names(itemtransacao) ){
print(col)
print(nrow(unique(itemtransacao[col])))
print(unique(itemtransacao[col]))
}
for(col in names(itens) ){
print(col)
print(nrow(unique(itens[col])))
print(unique(itens[col]))
}
for(col in names(transacoes) ){
print(col)
print(nrow(unique(transacoes[col])))
print(unique(transacoes[col]))
}
itens$tipo <- gsub("refirgerante", "refrigerante", itens$tipo)
itens$marca <- gsub("limão", "limao", itens$marca)
library(tidyverse)
library(ggplot2)
library(cluster)
library(factoextra)
library(dbscan)
#install.packages("arules")
library(arules)
itemtransacao = read_csv("../../../itemtransacao.csv")
itens = read_csv("../../../itens.csv")
transacoes = read_csv("../../../transacoes.csv")
print(names(itemtransacao))
print(names(itens))
print(names(transacoes))
itens$tipo <- gsub("refirgerante", "refrigerante", itens$tipo)
itens$marca <- gsub("limão", "limao", itens$marca)
dados = itemtransacao %>%
group_by(IDTransação,item) %>%
summarise(qtd_itens = n()) %>%
left_join(itens, by = c("item"="codItem")) %>%
select("IDTransação","descrição","qtd_itens")%>%
pivot_wider(names_from = "descrição", values_from = "qtd_itens")
dados[is.na(dados)] <- 0
View(transacoes)
dados_itemtransacao = dados %>% left_join(transacoes, by = "IDTransação" )
View(dados_itemtransacao)
dados_marca =  itemtransacao %>%
left_join(itens, by = c("item"="codItem")) %>%
select("IDTransação","tipo","marca")%>%
pivot_wider(names_from = "tipo", values_from = "marca")
dados_tipo =  itemtransacao %>%
left_join(itens, by = c("item"="codItem")) %>%
select("IDTransação","tipo","descrição")%>%
pivot_wider(names_from = "tipo", values_from = "descrição")
dados_marca_desc =  itemtransacao %>%
left_join(itens, by = c("item"="codItem")) %>%
select("IDTransação","marca","descrição")%>%
pivot_wider(names_from = "marca", values_from = "descrição")
dados_tipo$qtd_sabao = unlist(lapply(dados_tipo$`sabao em po`,length))
dados_tipo %>% group_by(qtd_sabao) %>% summarise(ocorrencias = n(), percentagem = round(n()/nrow(dados_tipo)*100,2))
# Padronizar os dados
dados_scaled <- dados %>%  select(-"IDTransação") %>% scale()
# Calcular a soma dos quadrados dentro dos clusters (WSS - Within-Cluster Sum of Squares) para diferentes valores de k
wss <- c()
for(k in 1:26) {
km <- kmeans(dados_scaled, centers = k, nstart = 25)
wss <- c(wss, km$tot.withinss)
}
# Criar o gráfico de cotovelo
plot(1:26, wss, type = "b",
xlab = "Número de Clusters (k)",
ylab = "Soma dos Quadrados Dentro dos Clusters",
main = "Método do Cotovelo para Determinar k Ideal")
grid()
# Para encontrar o número ideal de clusters usando silhueta
silhouette_scores <- c()
for(k in 2:26) {
km <- kmeans(dados_scaled, centers = k, nstart = 25)
sil_score <- mean(silhouette(km$cluster, dist(dados_scaled))[,3])
silhouette_scores <- c(silhouette_scores, sil_score)
}
# Plotar scores de silhueta para diferentes valores de k
plot(2:26, silhouette_scores, type = "b",
xlab = "Número de Clusters (k)",
ylab = "Score Médio de Silhueta",
main = "Scores de Silhueta por Número de Clusters")
# Método K-means
k=10
kmeans_result <- kmeans(dados_scaled, centers = k, nstart = 25)
dados$cluster_kmeans <- unlist(kmeans_result['cluster'])
# Calcular e plotar a silhueta para K-means
# Calcular a silhueta
sil <- silhouette(kmeans_result$cluster, dist(dados_scaled))
print(mean(sil[,3]))
print(sort(dados, by=cluster_kmeans))
sort(dados, by=cluster_kmeans)
View(dados)
dados %>% group_by(cluster_kmeans) %>% sum()
#dados %>% group_by(cluster_kmeans)
aggregate(. ~ cluster_kmeans, data = dados, sum)
#dados %>% group_by(cluster_kmeans)
aggregate(. ~ cluster_kmeans, data = dados, sum) %>% subset(-IDTransação)
#dados %>% group_by(cluster_kmeans)
aggregate(. ~ cluster_kmeans, data = dados, sum) %>% subset(c(-IDTransação))
#dados %>% group_by(cluster_kmeans)
aggregate(. ~ cluster_kmeans, data = dados, sum) %>% subset(select = c(-IDTransação))
dados %>% group_by(cluster_kmeans) %>% n_unique(IDTransação)
dados %>% group_by(cluster_kmeans) %>% n_distinct(IDTransação)
dados %>% group_by(cluster_kmeans) %>% subset(select = IDTransação) %>% n_distinct()
result_cluster = aggregate(. ~ cluster_kmeans, data = dados, sum) %>% subset(select = c(-IDTransação))
result_cluster
aggregate(. ~ cluster_kmeans, data = dados, n_distinct()) %>% subset(select = c(IDTransação))
aggregate(. ~ cluster_kmeans, data = dados, n_distinct %>% subset(select = c(IDTransação))
result_cluster = aggregate(. ~ cluster_kmeans, data = dados, sum) %>% subset(select = c(-IDTransação))
aggregate(. ~ cluster_kmeans, data = dados, n_distinct) %>% subset(select = c(IDTransação))
result_cluster = aggregate(. ~ cluster_kmeans, data = dados, sum) %>% subset(select = c(-IDTransação))
result_cluster
aggregate(. ~ cluster_kmeans, data = dados, n_distinct) %>% subset(select = c(cluster_kmeans,IDTransação))
result_cluster = aggregate(. ~ cluster_kmeans, data = dados, sum) %>% subset(select = c(-IDTransação))
result_cluster
qtd_trans_cluster = aggregate(. ~ cluster_kmeans, data = dados, n_distinct) %>% subset(select = c(cluster_kmeans,IDTransação))
result_cluster = aggregate(. ~ cluster_kmeans, data = dados, sum) %>% subset(select = c(-IDTransação)) %>% left_join(qtd_trans_cluster, by=cluster_kmeans)
qtd_trans_cluster = aggregate(. ~ cluster_kmeans, data = dados, n_distinct) %>% subset(select = c(cluster_kmeans,IDTransação))
result_cluster = aggregate(. ~ cluster_kmeans, data = dados, sum) %>% subset(select = c(-IDTransação)) %>% left_join(qtd_trans_cluster, by=c(cluster_kmeans))
View(qtd_trans_cluster)
View(result_cluster)
qtd_trans_cluster = aggregate(. ~ cluster_kmeans, data = dados, n_distinct) %>% subset(select = c(cluster_kmeans,IDTransação))
result_cluster = aggregate(. ~ cluster_kmeans, data = dados, sum) %>% subset(select = c(-IDTransação)) %>% left_join(qtd_trans_cluster, by=c("cluster_kmeans"))
result_cluster
qtd_trans_cluster = aggregate(. ~ cluster_kmeans, data = dados, n_distinct) %>% subset(select = c(cluster_kmeans,IDTransação))
result_cluster = aggregate(. ~ cluster_kmeans, data = dados, sum) %>% subset(select = c(-IDTransação)) %>% right_join(qtd_trans_cluster, by=c("cluster_kmeans"))
result_cluster
install.packages("htmltools")
install.packages("xfun")
